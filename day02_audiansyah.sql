SET search_path TO oe,hr;
ALTER ROLE postgres SET search_path TO oe,hr;

select * from hr.locations

-- TASK 1
-- Create Table & relasinyta untuk table bank, users, charts, chart_items & attribute tambahan yang ada di table orders.
create table oe.bank (
bank_code varchar(4) primary key,
bank_name varchar(55));

select * from oe.bank 

create table oe.users(
user_id int primary key,
user_name varchar(30),
user_email varchar(80) unique,
user_password varchar(125),
user_handphone varchar(24) unique,
created_on timestamp DEFAULT CURRENT_TIMESTAMP
)

select * from oe.users

create table oe.carts(
cart_id smallint primary key,
user_id int,
create_on timestamp DEFAULT CURRENT_TIMESTAMP,
constraint user_id foreign key (user_id) references users(user_id)
)

select * from oe.carts

create table oe.cart_items(
cart_item_id smallint primary key,
product_id int unique,
quantity smallint,
created_on timestamp default CURRENT_TIMESTAMP,
cart_id int not null,
constraint product_id foreign key (product_id) references products(product_id),
constraint cart_id foreign key (cart_id) references carts(cart_id)
)

ALTER TABLE oe.cart_items
alter COLUMN created_on set DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE oe.cart_items
alter COLUMN cart_id set not null

select * from oe.cart_items

alter table oe.orders
add column total_discount decimal(5,2),
add column total_amount decimal(8,2),
add column payment_type varchar(15),
add column card_no varchar(25),
add column transac_no varchar(25),
add column transac_date timestamp DEFAULT CURRENT_TIMESTAMP,
add column ref_no varchar(25),
add column user_id int,
add column bank_code varchar(4),
add constraint user_id_fk foreign key (user_id) references oe.users(user_id),
add constraint bank_code_fk foreign key (bank_code) references oe.bank(bank_code);

select * from oe.orders


-- TASK 2
-- buat link antara table hr.locations dan table oe.order dan update kolom location_id di table oe.orders
alter table oe.orders
add column location_id int,
add constraint location_id foreign key (location_id) references hr.locations(location_id)

alter table oe.cart_items
add constraint cart_product_id_fk foreign key (product_id) 
references oe.products(product_id)

update oe.orders as a
set location_id = (select location_id from oe.location_x loc
where loc.street_address=a.ship_address and loc.postal_code=a.ship_postal_code
and loc.city=a.ship_city and loc.state_province=a.ship_region and
loc.country_name=a.ship_country
) where a.location_id is null

select * from oe.orders where location_id is not null

-- TASK 3
-- pindahkan data employee dari schema oe.employees ke schema hr.employees. data yang di pindahkan cukup mengikuti column yang ada di schema hr.employees
select * from hr.employees
select * from oe.employees


insert into hr.employees (employee_id, first_name, last_name, email, hire_date, job_id, salary)
select employee_id, first_name, last_name, LOWER(first_name || '.' || last_name || '@sqltutorial.com') as email, hire_date, j.job_id,
0.00 as salary
from oe.employees
JOIN (
    SELECT job_id
    FROM hr.jobs
    ORDER BY RANDOM()
    LIMIT 1
) j ON TRUE;

-- buat relasi antara table hr.emlpoyees dengan table oe.orders
select * from oe.orders

alter table oe.orders
add constraint employee_id foreign key (employee_id) references hr.employees(employee_id)

-- TASK 4
-- create table users di schema oe
-- pindahkan data dari table oe.customers ke table users.
-- buat relasi antara table oe.users dengan table oe.orders
-- untuk value pass gunakan funct cryp(). kolom pass diambil dari kolom lower(customer_id)
select * from oe.customers
select * from oe.users

alter table oe.users
alter column user_id add generated by default as identity

CREATE EXTENSION IF NOT EXISTS pgcrypto;

insert into oe.users (user_name,user_password,user_handphone) select contact_name as user_name, 
crypt(lower(oc.customer_id), gen_salt('bf', 12)),
phone as user_handphone from oe.customers oc

select * from oe.users